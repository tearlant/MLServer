name: Build and Release

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build --progress plain -t my-image -f Dockerfile .

    - name: Extract artifacts
      run: |
        docker create --name my-container my-image
        docker cp my-container:/app/publish/API ./api-artifacts
        docker cp my-container:/app/publish/DataTrainer ./datatrainer-artifacts
        docker rm my-container

    - name: Archive API artifacts
      uses: actions/upload-artifact@v2
      with:
        name: api-artifacts
        path: ./api-artifacts

    - name: Archive DataTrainer artifacts
      uses: actions/upload-artifact@v2
      with:
        name: datatrainer-artifacts
        path: ./datatrainer-artifacts

    - name: SSH into server and upload artifacts
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PEM_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        script: |
          ssh -oStrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "mkdir -p ~/ml-server-backend/api"
          ssh -oStrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "mkdir -p ~/ml-server-backend/datatrainer"
          scp -oStrictHostKeyChecking=no -r -i ${{ secrets.EC2_PEM_KEY }} ./api-artifacts/* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/ml-server-backend/api/
          scp -oStrictHostKeyChecking=no -r -i ${{ secrets.EC2_PEM_KEY }} ./datatrainer-artifacts/* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/ml-server-backend/datatrainer/

    - name: Delete Docker image
      run: docker rmi my-image
